{"id":"index.html","dependencies":[{"name":"./earth.jpg","dynamic":true,"resolved":"C:\\Users\\Ariel\\Documents\\Geospatial\\openLayers-FrontEnd\\earth.jpg","loc":{"line":6,"column":13},"parent":"C:\\Users\\Ariel\\Documents\\Geospatial\\openLayers-FrontEnd\\index.html"},{"name":"_css_loader","parent":"C:\\Users\\Ariel\\Documents\\Geospatial\\openLayers-FrontEnd\\index.html","resolved":"C:\\Users\\Ariel\\Documents\\Geospatial\\openLayers-FrontEnd\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\Ariel\\Documents\\Geospatial\\openLayers-FrontEnd\\package.json","includedInParent":true,"mtime":1635852871072}],"generated":{"html":"<!doctype html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n\r\n    <!-- Bootstrap CSS -->\r\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\" integrity=\"sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn\" crossorigin=\"anonymous\">\r\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.9.0/css/ol.css\" type=\"text/css\">\r\n    <script src=\"https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.9.0/build/ol.js\"></script>\r\n    <script src=\"https://code.jquery.com/jquery-3.6.0.slim.js\" integrity=\"sha256-HwWONEZrpuoh951cQD1ov2HUK5zA5DwJ1DNUXaM6FsY=\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\r\n    <style>.map {\r\n          width: 1000px;\r\n          height: 400px;\r\n        }\r\n        body{\r\n            background-image: url('/704247f03a0d0260d0ed5a13c7cee64f.jpg');\r\n            color: white\r\n        }</style>\r\n    <title>Geospatial Front End</title>\r\n  </head>\r\n  <body style=\"text-align: center;\">\r\n    <h1>Geospatial Front End</h1>\r\n    <br>\r\n\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-10\" id=\"colMap\">\r\n                <div id=\"map\" class=\"map\"></div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h2>Please select the option to display your map</h2>\r\n        <br>\r\n        <!-- <button type=\"button\" class=\"btn btn-info\">Layers Info</button> -->\r\n        <select name=\"cars\" id=\"layers\" onclick=\"obtainImage()\">\r\n            <option value=\"NATURAL-COLOR\">NATURAL-COLOR</option>\r\n            <option value=\"FALSE-COLOR\">FALSE-COLOR</option>\r\n            <option value=\"NDVI\">NDVI</option>\r\n            <option value=\"MOISTURE-INDEX\">MOISTURE-INDEX</option>\r\n            <option value=\"SWIR\">SWIR</option>\r\n            <!-- <option value=\"NDWI\">NDWI</option>\r\n            <option value=\"NDSI\">NDSI</option> -->\r\n\r\n          </select>\r\n    </div>\r\n\r\n\r\n \r\n\r\n\r\n    <!-- Optional JavaScript; choose one of the two! -->\r\n\r\n    <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->\r\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-fQybjgWLrvvRgtW6bFlB7jaZrFsaBXjsOMm/tB9LTS58ONXgqbR9W8oWht/amnpF\" crossorigin=\"anonymous\"></script>\r\n\r\n    <!-- Option 2: Separate Popper and Bootstrap JS -->\r\n    <!--\r\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.min.js\" integrity=\"sha384-VHvPCCyXqtD5DqJeNxl2dtTyhF78xXNXdkwX1CZeRusQfRKp+tA7hAShOK/B/fQ2\" crossorigin=\"anonymous\"></script>\r\n    -->\r\n  </body>\r\n  <script>function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar k = 0;\n$(document).ready(function () {\n  obtainImage();\n});\n\nfunction sendURL() {\n  return _sendURL.apply(this, arguments);\n}\n\nfunction _sendURL() {\n  _sendURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var valores, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            valores = $(\"#layers option:selected\").text();\n            _context.next = 3;\n            return axios({\n              url: 'http://localhost:3000/wmtURL',\n              //responseType: \"stream\",\n              method: \"POST\",\n              data: {\n                colors: valores\n              }\n            });\n\n          case 3:\n            response = _context.sent;\n            console.log(response.data);\n            return _context.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendURL.apply(this, arguments);\n}\n\nfunction obtainImage() {\n  return _obtainImage.apply(this, arguments);\n}\n\nfunction _obtainImage() {\n  _obtainImage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var requestedURL, extent, projection, map, string1, _requestedURL;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(k == 0)) {\n              _context2.next = 14;\n              break;\n            }\n\n            console.log('Hola Mundo--------');\n            k = k + 1;\n            console.log('k values is:');\n            console.log(k);\n            _context2.next = 8;\n            return sendURL();\n\n          case 8:\n            requestedURL = _context2.sent;\n            extent = [0, 0, 1024, 968];\n            projection = new ol.proj.Projection({\n              code: 'static-image',\n              units: 'pixels',\n              extent: extent\n            });\n            map = new ol.Map({\n              layers: [new ol.layer.Image({\n                source: new ol.source.ImageStatic({\n                  url: 'http://localhost:3000/imageTest.jpg',\n                  projection: 'EPSG:31982',\n                  imageExtent: extent\n                })\n              })],\n              target: 'map',\n              view: new ol.View({\n                projection: projection,\n                center: ol.extent.getCenter(extent),\n                zoom: 2\n              })\n            });\n            _context2.next = 24;\n            break;\n\n          case 14:\n            console.log('k values is:');\n            console.log(k);\n            string1 = \"<div id=\\\"map\\\" class=\\\"map\\\"></div>\";\n            $('#colMap').html(string1);\n            _context2.next = 20;\n            return sendURL();\n\n          case 20:\n            _requestedURL = _context2.sent;\n            extent = [0, 0, 1024, 968];\n            projection = new ol.proj.Projection({\n              code: 'static-image',\n              units: 'pixels',\n              extent: extent\n            });\n            map = new ol.Map({\n              layers: [new ol.layer.Image({\n                source: new ol.source.ImageStatic({\n                  url: 'http://localhost:3000/imageTest.jpg',\n                  projection: 'EPSG:31982',\n                  imageExtent: extent\n                })\n              })],\n              target: 'map',\n              view: new ol.View({\n                projection: projection,\n                center: ol.extent.getCenter(extent),\n                zoom: 2\n              })\n            });\n\n          case 24:\n            _context2.next = 29;\n            break;\n\n          case 26:\n            _context2.prev = 26;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 26]]);\n  }));\n  return _obtainImage.apply(this, arguments);\n}</script>\r\n\r\n</html>"},"sourceMaps":null,"error":null,"hash":"e8948b17502bc64ad533b30793155c70","cacheData":{"env":{}}}